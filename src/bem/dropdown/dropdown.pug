//- valueType: 'count', 'guests', 'rooms'
//- controlType: 'none', 'apply', 'full'

mixin dropdown_(data, valueType='count', controlType='none', expanded=false)
   - let valueTypeClass = '';
   - if(valueType == 'guests') valueTypeClass = ' dropdown_guests';
   - if(valueType == 'rooms') valueTypeClass = ' dropdown_rooms';
   .dropdown
      div(class='dropdown__interface' + valueTypeClass)
         div(class='dropdown__select' + (expanded ? ' dropdown__select_expanded' : ''))
            .dropdown__select-value
            img(src=require('./bem/dropdown/dropdown__arrow_expanded.svg').default).dropdown__arrow
         ul(class='dropdown__list' + (expanded ? '' : ' dropdown__list_collapsed'))
            each val in data
               li.dropdown__list-item
                  .dropdown__list-item-text=val.name
                  .dropdown__counter
                     if val.value == 0
                        .dropdown__counter-button.dropdown__minus.dropdown__counter-button_disabled
                           img(src=require('./bem/dropdown/dropdown__minus.svg').default)
                     else
                        .dropdown__counter-button.dropdown__minus
                           img(src=require('./bem/dropdown/dropdown__minus.svg').default)
                     .dropdown__counter-value=val.value
                     .dropdown__counter-button.dropdown__plus
                        img(src=require('./bem/dropdown/dropdown__plus.svg').default)
            if controlType != 'none'
               .dropdown__control
                  if controlType == 'full'
                     .dropdown__clear='Очистить'
                  else
                     div
                  .dropdown__apply Применить

mixin filter-date-dropdown(value='')
  div(style!=attributes.margin).dropdown
     div.dropdown__select=value
       img(src=require('./bem/dropdown/dropdown__arrow.svg').default).dropdown__arrow.dropdown__arrow_active